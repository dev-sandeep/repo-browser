{"version":3,"sources":["components/MainHeading.jsx","common/config.js","common/urlCall.js","components/Stats.jsx","components/SingleDetailList.jsx","views/RepoDetail.jsx"],"names":["MainHeadingSt","styled","div","MainHeading","props","className","children","BASE_URL","cache","setupCache","maxAge","api","Axios","create","adapter","getUser","user","url","Promise","res","rej","get","then","resp","data","e","getRepos","getRepoDetail","repoId","resolve","reject","console","error","StatsRow","StatsNum","Stats","Object","keys","length","map","key","Detail","SingleDetailList","name","fullName","RepoWrapper","RepoDetail","repoName","match","params","repo","React","useState","setData","stats","setStats","useEffect","stargazers_count","watchers_count","forks","open_issues_count","id","full_name","description","html_url","fromNow","created_at","updated_at"],"mappings":"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","file":"static/js/5.a104f879.chunk.js","sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\n\nconst MainHeadingSt = styled.div`\n    background: #eeeeee;    \n    padding: 10px;\n    padding-left: 3px;\n    font-size: 3em;\n    font-weight: 300;\n    text-transform: capitalize;\n    margin {\n    bottom: 20px;\n    }\n`;\n\nconst MainHeading = (props)=>{\n    return (\n        <MainHeadingSt className=\"main-heading\">{props.children}</MainHeadingSt>\n    );\n}\n\nexport default MainHeading;","export const BASE_URL =  \"https://api.github.com/\"","import Axios from 'axios';\nimport {\n    setupCache\n} from 'axios-cache-adapter'\nimport {\n    BASE_URL\n} from './config'\n\nconst cache = setupCache({\n    maxAge: 15 * 60 * 100\n});\n\nconst api = Axios.create({\n    adapter: cache.adapter\n});\n\nconst getUser = (user) => {\n    let url = `${BASE_URL}users/${user}`;\n    return new Promise((res, rej) => {\n        get(url).then((resp) => {\n            let data = resp.data;\n            res(data);\n\n        }, (e) => {\n            rej(e);\n        });\n    });\n}\n\nconst getRepos = (user) => {\n    let url = `${BASE_URL}users/${user}/repos`;\n    return new Promise((res, rej) => {\n        get(url).then((resp) => {\n            let data = resp.data;\n            res(data);\n        }, (e) => {\n            rej(e);\n        });\n    });\n}\n\nconst getRepoDetail = (user, repoId) => {\n    let url = `${BASE_URL}repos/${user}/${repoId}`;\n    return new Promise((res, rej) => {\n        get(url).then((resp) => {\n            let data = resp.data;\n            res(data);\n        }, (e) => {\n            rej(e);\n        });\n    });\n}\n\n///////////////////////////////////\nfunction get(url) {\n    if (!url) {\n        console.error(\"URL is a mandatory field to make an API call\");\n        return;\n    }\n\n    return new Promise((resolve, reject) => {\n        api.get(url).then((data) => {\n            resolve(data);\n        }, (e) => {\n            reject(e);\n        });\n    });\n}\n\n\nexport {\n    getUser,\n    getRepoDetail,\n    getRepos\n}","import React from 'react'\nimport styled from 'styled-components'\n\nconst StatsRow = styled.div`\n    grid-template-columns: 1fr 1fr;\n    width:400px;\n    display: grid;\n    justify-content: center;\n    padding: 10px;\n    margin-top: 17px;\n\n    & > div{\n        margin: 0 auto;\n        margin-top:15px;\n        margin-bottom: 15px;\n        text-align: center\n    }\n`;\n\nconst StatsNum = styled.div`\n    font-size: 3em;\n    font-weight: 200;\n`;\nconst Stats = ({data}) => {\n    if(Object.keys(data).length == 0)\n        return null;\n\n    return (\n        <div className=\"stats\">\n            <StatsRow>\n                {Object.keys(data).map((key) => (\n                    <div>\n                        <StatsNum>{data[key] || 0}</StatsNum>\n                        <small>{key}</small>\n                    </div>\n                ))}\n            </StatsRow>\n        </div>\n    );\n}\n\nexport default Stats;","import React from 'react'\nimport styled from 'styled-components'\n\nconst Detail = styled.div`\n    font-weight: 200;\n    font-size: 1.5em;\n    margin-bottom: 15px;\n`;\n\n\n\nconst SingleDetailList = ({name, fullName}) => {\n    if(!fullName || fullName.length === 0)\n        return null;\n        \n    return (<div>\n        <div className=\"title\">{name}</div>\n        <Detail>{fullName}</Detail>\n    </div>);\n}\n\nexport default SingleDetailList;","import React, { useEffect } from 'react'\nimport {getRepoDetail} from './../common/urlCall';\nimport Stats from './../components/Stats';\nimport SingleDetailList from './../components/SingleDetailList'\nimport MainHeading from './../components/MainHeading'\nimport Moment from 'react-moment';\nimport styled from 'styled-components';\n\nconst RepoWrapper = styled.div`\n    justify-content: center;\n    display: grid;\n    margin-top: 5%;\n`;\nconst RepoDetail = (props) => {\n    const repoName = props.match.params.repo;\n    const user = props.match.params.user;\n\n    const [data, setData] = React.useState({});\n    const [stats, setStats] = React.useState([]);\n    useEffect(()=>{\n        getRepoDetail(user, repoName).then((data)=>{\n            setData(data);\n            setStats({\n                \"Stars\": data.stargazers_count,\n                \"Watch\": data.watchers_count,\n                \"Forks\": data.forks,\n                \"Open Issues\": data.open_issues_count\n            });\n        })\n    },[]);\n    return (\n        <section id=\"repo-detail\">\n            <MainHeading>\n                {data.name}\n            </MainHeading>\n            <hr />\n            <RepoWrapper>\n                <div></div>\n                <div className=\"details\">\n                    <SingleDetailList name={\"Name\"} fullName={data.full_name} />\n                    <SingleDetailList name={\"Description\"} fullName={data.description} />\n                    <SingleDetailList name={\"Github Link\"} fullName={data.html_url} />\n                    <SingleDetailList name={\"Created On\"} fullName={<Moment fromNow>{data.created_at}</Moment>} />\n                    <SingleDetailList name={\"Last Update\"} fullName={<Moment fromNow>{data.updated_at}</Moment>} />\n\n                    <Stats data={stats} />\n                </div>\n\n            </RepoWrapper>\n        </section>\n    );\n}\n\nexport default RepoDetail;"],"sourceRoot":""}