{"version":3,"sources":["components/Loader.jsx","components/MainHeading.jsx","common/config.js","common/urlCall.js","components/Stats.jsx","components/SingleDetailList.jsx","views/RepoDetail.jsx"],"names":["MessageWrapper","styled","div","props","visible","Loader","isLoading","children","MainHeadingSt","MainHeading","className","BASE_URL","cache","setupCache","maxAge","api","Axios","create","adapter","getUser","user","url","Promise","res","rej","get","then","resp","data","e","getRepos","getRepoDetail","repoId","resolve","reject","console","error","StatsRow","StatsNum","Stats","Object","keys","length","map","key","Detail","SingleDetailList","link","name","fullName","href","RepoWrapper","RepoDetail","repoName","match","params","repo","React","useState","setData","isLoader","setIsLoader","stats","setStats","useEffect","stargazers_count","watchers_count","forks","open_issues_count","id","full_name","description","html_url","fromNow","created_at","updated_at"],"mappings":"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","file":"static/js/5.4b875c9b.chunk.js","sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\n\nexport const MessageWrapper = styled.div`\n    background: linear-gradient(-45deg, #ee7752, #e73c7e, #23a6d5, #23d5ab);\n    background-size: 400% 400%;\n    height: 200px;\n    color: #fff;\n    font-size: 3em;\n    font-weight: 200;\n    text-align: center;\n    animation: gradient 15s ease infinite;\n    margin-top:10px;\n    & div{\n        text-align: center;\n        font-weight: 200;\n        position: relative;\n        top: 34%;\n        margin-top: 10px;\n    }\n\n    @keyframes gradient {\n    0% {\n        background-position: 0% 50%;\n    }\n    50% {\n        background-position: 100% 50%;\n    }\n    100% {\n        background-position: 0% 50%;\n    }\n\n    display: ${props=>props.visible?'block':'none'};\n`;\nconst Loader = (props)=>{\n    if(!props.isLoading)\n        return (<>{props.children}</>);\n\n    return (\n        <MessageWrapper visible={props.isLoading}>\n            <div>Loading...</div>\n        </MessageWrapper>\n    );\n}\n\nexport default Loader;","import React from 'react'\nimport styled from 'styled-components'\n\nconst MainHeadingSt = styled.div`\n    background: #eeeeee;    \n    padding: 10px;\n    padding-left: 3px;\n    font-size: 3em;\n    font-weight: 300;\n    text-transform: capitalize;\n    margin {\n    bottom: 20px;\n    }\n`;\n\nconst MainHeading = (props)=>{\n    return (\n        <MainHeadingSt className=\"main-heading\">{props.children}</MainHeadingSt>\n    );\n}\n\nexport default MainHeading;","export const BASE_URL =  \"https://api.github.com/\"","import Axios from 'axios';\nimport {\n    setupCache\n} from 'axios-cache-adapter'\nimport {\n    BASE_URL\n} from './config'\n\nconst cache = setupCache({\n    maxAge: 15 * 60 * 100\n});\n\nconst api = Axios.create({\n    adapter: cache.adapter\n});\n\nconst getUser = (user) => {\n    let url = `${BASE_URL}users/${user}`;\n    return new Promise((res, rej) => {\n        get(url).then((resp) => {\n            let data = resp.data;\n            res(data);\n\n        }, (e) => {\n            rej(e);\n        });\n    });\n}\n\nconst getRepos = (user) => {\n    let url = `${BASE_URL}users/${user}/repos`;\n    return new Promise((res, rej) => {\n        get(url).then((resp) => {\n            let data = resp.data;\n            res(data);\n        }, (e) => {\n            rej(e);\n        });\n    });\n}\n\nconst getRepoDetail = (user, repoId) => {\n    let url = `${BASE_URL}repos/${user}/${repoId}`;\n    return new Promise((res, rej) => {\n        get(url).then((resp) => {\n            let data = resp.data;\n            res(data);\n        }, (e) => {\n            rej(e);\n        });\n    });\n}\n\n///////////////////////////////////\nfunction get(url) {\n    if (!url) {\n        console.error(\"URL is a mandatory field to make an API call\");\n        return;\n    }\n\n    return new Promise((resolve, reject) => {\n        api.get(url).then((data) => {\n            resolve(data);\n        }, (e) => {\n            reject(e);\n        });\n    });\n}\n\n\nexport {\n    getUser,\n    getRepoDetail,\n    getRepos\n}","import React from 'react'\nimport styled from 'styled-components'\n\nconst StatsRow = styled.div`\n    grid-template-columns: 1fr 1fr;\n    width:400px;\n    display: grid;\n    justify-content: center;\n    padding: 10px;\n    margin-top: 17px;\n\n    & > div{\n        margin: 0 auto;\n        margin-top:15px;\n        margin-bottom: 15px;\n        text-align: center\n    }\n`;\n\nconst StatsNum = styled.div`\n    font-size: 3em;\n    font-weight: 200;\n`;\nconst Stats = ({data}) => {\n    if(Object.keys(data).length == 0)\n        return null;\n\n    return (\n        <div className=\"stats\">\n            <StatsRow>\n                {Object.keys(data).map((key) => (\n                    <div>\n                        <StatsNum>{data[key] || 0}</StatsNum>\n                        <small>{key}</small>\n                    </div>\n                ))}\n            </StatsRow>\n        </div>\n    );\n}\n\nexport default Stats;","import React from 'react'\nimport styled from 'styled-components'\n\nconst Detail = styled.div`\n    font-weight: 200;\n    font-size: 1.5em;\n    margin-bottom: 15px;\n`;\n\n\n\nconst SingleDetailList = ({link, name, fullName}) => {\n    if(!fullName || fullName.length === 0)\n        return null;\n        \n    return (<div>\n        <div className=\"title\">{name}</div>\n        <Detail><a href={link}>{fullName}</a></Detail>\n    </div>);\n}\n\nexport default SingleDetailList;","import React, { useEffect } from 'react'\nimport {getRepoDetail} from './../common/urlCall';\nimport Stats from './../components/Stats';\nimport Loader from './../components/Loader'\nimport SingleDetailList from './../components/SingleDetailList'\nimport MainHeading from './../components/MainHeading'\nimport Moment from 'react-moment';\nimport styled from 'styled-components';\n\nconst RepoWrapper = styled.div`\n    justify-content: center;\n    display: grid;\n    margin-top: 5%;\n`;\nconst RepoDetail = (props) => {\n    const repoName = props.match.params.repo;\n    const user = props.match.params.user;\n\n    const [data, setData] = React.useState({});\n    const [isLoader, setIsLoader] = React.useState(false);\n    const [stats, setStats] = React.useState([]);\n    useEffect(()=>{\n        setIsLoader(true);\n        getRepoDetail(user, repoName).then((data)=>{\n            setData(data);\n            setStats({\n                \"Stars\": data.stargazers_count,\n                \"Watch\": data.watchers_count,\n                \"Forks\": data.forks,\n                \"Open Issues\": data.open_issues_count\n            });\n\n            setIsLoader(false);\n        }, (e)=>{\n            console.error(e);\n            setIsLoader(false);\n        })\n    },[]);\n    return (\n        <section id=\"repo-detail\">\n            <MainHeading>\n                {data.name}\n            </MainHeading>\n            <hr />\n            <Loader isLoading={isLoader}>\n                <RepoWrapper>\n                    <div></div>\n                    <div className=\"details\">\n                        <SingleDetailList name={\"Name\"} fullName={data.full_name} />\n                        <SingleDetailList name={\"Description\"} fullName={data.description} />\n                        <SingleDetailList name={\"Github Link\"} link={data.html_url} fullName={data.html_url} />\n                        <SingleDetailList name={\"Created On\"} fullName={<Moment fromNow>{data.created_at}</Moment>} />\n                        <SingleDetailList name={\"Last Update\"} fullName={<Moment fromNow>{data.updated_at}</Moment>} />\n\n                        <Stats data={stats} />\n                    </div>\n\n                </RepoWrapper>\n            </Loader>\n        </section>\n    );\n}\n\nexport default RepoDetail;"],"sourceRoot":""}