{"version":3,"sources":["components/Header.jsx","components/SearchForm.jsx","common/utility.js","common/config.js","common/urlCall.js","views/Repos.jsx","components/Stats.jsx","views/RepoDetail.jsx","components/UserResult.jsx","views/UserSearch.jsx","redux/reducer.js","App.js","serviceWorker.js","index.js"],"names":["HeaderSt","styled","nav","Header","title","className","SearchForm","placeholder","onChange","searchAction","func","wait","immediate","timeout","context","this","args","arguments","later","apply","callNow","clearTimeout","setTimeout","debounce","val","id","onSubmit","e","preventDefault","target","value","type","BASE_URL","get","url","Promise","resolve","reject","Axios","then","data","console","error","StripedSt","tr","props","num","Repos","reduxData","useSelector","state","useState","originalData","setOriginalData","isStarSorted","setIsStarSorted","repoData","setRepoData","searchText","setSearchText","selectedUser","match","params","user","userId","useEffect","res","rej","resp","getRepos","sort","a","b","stargazers_count","text","finalData","filter","el","name","toLowerCase","indexOf","description","language","disabled","length","checked","map","index","to","Stats","log","Object","keys","key","RepoDetail","repoName","repo","React","setData","stats","setStats","repoId","getRepoDetail","watchers_count","forks","open_issues_count","full_name","html_url","created_at","updated_at","NoData","UserResult","followers","following","public_gist","public_repos","src","avatar_url","company","bio","login","href","blog","UserSearch","userData","setUserData","dispatch","useDispatch","getUser","Reducer","action","Fallback","RouterSt","div","createStore","reducer","App","fallback","store","basename","window","location","pathname","exact","path","render","Boolean","hostname","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.e6a9881c.chunk.js","sourcesContent":["import React from 'react';\nimport styled from 'styled-components'\n\nconst HeaderSt = styled.nav`\npadding: 15px;\nbackground: black;\ncolor: #fff;\nfont-size: 1.5em;\nfont-weight: 300;\n`;\n\nconst Header = ({title})=>{\n\n    return (\n        <HeaderSt>\n             <div className=\"main-title\">{title}</div>\n        </HeaderSt>\n    );\n}\n\nexport default Header;","import React from 'react'\nimport {debounce} from './../common/utility'\n\nconst SearchForm = ({placeholder, onChange}) => {\n    const searchAction = debounce((val)=>{\n        onChange(val);\n    }, 350);\n\n    const onnChangeHandler = (e)=>{\n        searchAction(e.target.value);\n    }\n\n    return (\n        <form id=\"user-serch-form\" onSubmit={e=>e.preventDefault()}>\n            <div className=\"input-div\">\n                <input onChange={onnChangeHandler} type=\"text\" placeholder={placeholder} />\n            </div>\n        </form>\n    );\n}\n\nexport default SearchForm;","/**\n * debounce function\n * @param {} func \n * @param {*} wait \n * @param {*} immediate \n */\nexport const debounce = (func, wait, immediate) => {\n    var timeout;\n    return function () {\n        var context = this,\n            args = arguments;\n        var later = function () {\n            timeout = null;\n            if (!immediate) func.apply(context, args);\n        };\n        var callNow = immediate && !timeout;\n        clearTimeout(timeout);\n        timeout = setTimeout(later, wait);\n        if (callNow) func.apply(context, args);\n    };\n};","export const BASE_URL =  \"https://api.github.com/\"","import Axios from 'axios';\nimport {\n    BASE_URL\n} from './config'\n\n\nconst getUser = (user) => {\n    let url = `${BASE_URL}users/${user}`;\n    return new Promise((res, rej) => {\n        get(url).then((resp) => {\n            let data = resp.data;\n            res(data);\n\n        }, (e) => {\n            rej(e);\n        });\n    });\n}\n\nconst getRepos = (user) => {\n    let url = `${BASE_URL}users/${user}/repos`;\n    return new Promise((res, rej) => {\n        get(url).then((resp) => {\n            let data = resp.data;\n            res(data);\n        }, (e) => {\n            rej(e);\n        });\n    });\n}\n\nconst getRepoDetail = (user, repoId) => {\n    let url = `${BASE_URL}repos/${user}/${repoId}`;\n    return new Promise((res, rej) => {\n        get(url).then((resp) => {\n            let data = resp.data;\n            res(data);\n        }, (e) => {\n            rej(e);\n        });\n    });\n}\n\n///////////////////////////////////\nfunction get(url) {\n    if (!url) {\n        console.error(\"URL is a mandatory field to make an API call\");\n        return;\n    }\n\n    return new Promise((resolve, reject) => {\n        Axios.get(url).then((data) => {\n            resolve(data);\n        }, (e) => {\n            reject(e);\n        });\n    });\n}\n\n\nexport {\n    getUser,\n    getRepoDetail,\n    getRepos\n}","import React, { useEffect, useState } from 'react'\nimport SearchForm from '../components/SearchForm';\nimport {useSelector} from 'react-redux'\nimport {getRepos} from './../common/urlCall';\nimport styled from 'styled-components'\nimport  { Link } from 'react-router-dom'\n\nconst StripedSt = styled.tr`\n    background: ${props=>props.num % 2 == 0?'#f1f8ff':'#fff'}\n`;\nconst Repos = (props) => {\n    const reduxData = useSelector(state=>state);\n    const [originalData, setOriginalData] = useState([]);\n    const [isStarSorted, setIsStarSorted] = useState(false);\n    const [repoData, setRepoData] = useState([]);\n    const [searchText, setSearchText] = useState('');\n\n    const selectedUser = props.match.params.user || reduxData.userId;\n    /**\n     * onloading first time make an API call and fetch the data\n     */\n    useEffect(()=>{\n        getRepos(selectedUser).then((data)=>{\n            setRepoData(data);\n            setOriginalData(data);\n        })\n    },[]);\n\n    /**\n     * responsible for handling the text search\n     * @param {} searchText \n     */\n    const onChangeHandler = (text)=>{\n        setSearchText(text);\n        let finalData = originalData.filter((el)=>{\n            if(el.name.toLowerCase().indexOf(text.toLowerCase()) !== -1)\n                return true\n            if(el.description && el.description.toLowerCase().indexOf(text.toLowerCase()) !== -1)\n                return true\n            if(el.language && el.language.toLowerCase().indexOf(text.toLowerCase()) !== -1)\n                return true\n\n            return false;\n        });\n\n        //sort if needed\n        if(isStarSorted){\n            finalData = sort(finalData);\n        }\n        \n        setRepoData(finalData);\n    }\n\n    /**\n     * responsible for sorting the elements by star\n     * @param {} data \n     */\n    const sort = data=>[...data].sort((a, b)=>b.stargazers_count - a.stargazers_count);\n\n    /**\n     * responsbile for sorting based on number of stars\n     */\n    const sortByStarHandler = (e)=>{\n        const isChecked = e.target.checked;\n        if(isChecked){\n            setIsStarSorted(true);\n            //sort by stars\n            let finalData = sort(repoData);\n            setRepoData(finalData);\n        }else{\n            setIsStarSorted(false);\n            setRepoData(originalData);\n        }\n    }\n\n    return (\n        <section id=\"main-repo\">\n            <div className=\"main-heading\">Repositories</div>\n            <SearchForm onChange={onChangeHandler} placeholder={\"Search a repository\"} />\n            <div>\n                <br />\n                <input disabled={searchText.length > 0} type=\"checkbox\" checked={isStarSorted} onChange={sortByStarHandler} />\n                <small>Sort by stars</small>\n            </div>\n            <table id=\"table-repo\">\n                <thead>\n                <tr>\n                    <th>Name</th>\n                    <th>Description</th>\n                    <th>Language</th>\n                    <th>Stars</th>\n                </tr>\n                </thead>\n                <tbody>\n                {repoData.map((el, index)=>(\n                    <StripedSt num={index}>\n                      <td>\n                          <Link to={`/${selectedUser}/repos/${el.name}`}>{el.name}</Link></td>\n                      <td>{el.description}</td>\n                      <td className=\"language\">{el.language}</td>\n                      <td className=\"stars\">{el.stargazers_count}</td>\n                  </StripedSt>\n                ))}\n                </tbody>\n            </table>\n        </section>\n    );\n}\n\nexport default Repos;","import React from 'react'\n\nconst Stats = ({data}) => {\n    console.log(data);\n    if(Object.keys(data).length == 0)\n        return null;\n\n    return (\n        <div className=\"stats\">\n            <div className=\"stats-row\">\n                {Object.keys(data).map((key) => (\n                    <div className=\"row\">\n                        <div className=\"stats\">{data[key] || 0}</div>\n                        <small>{key}</small>\n                    </div>\n                ))}\n            </div>\n        </div>\n    );\n}\n\nexport default Stats;","import React, { useEffect } from 'react'\nimport { Styled } from 'styled-components'\nimport UserForm from '../components/SearchForm';\nimport {getRepoDetail} from './../common/urlCall';\nimport Stats from './../components/Stats';\nconst RepoDetail = (props) => {\n    const repoName = props.match.params.repo;\n    const user = props.match.params.user;\n\n    const [data, setData] = React.useState({});\n    const [stats, setStats] = React.useState([]);\n    useEffect(()=>{\n        getRepoDetail(user, repoName).then((data)=>{\n            setData(data);\n            setStats({\n                \"Stars\": data.stargazers_count,\n                \"Watch\": data.watchers_count,\n                \"Forks\": data.forks,\n                \"Open Issues\": data.open_issues_count\n            });\n        })\n    },[]);\n    return (\n        <section id=\"repo-detail\">\n            <div className=\"main-heading\">{data.name}</div>\n            <div className=\"main-repo\">\n                <div></div>\n                <div className=\"details\">\n                    <div className=\"card-line\">\n                        <div className=\"title\">Name</div>\n                        <div className=\"detail\">{data.full_name}</div>\n                    </div>\n                    <div className=\"card-line\">\n                        <div className=\"title\">Description</div>\n                        <div className=\"detail\">{data.description}</div>\n                    </div>\n                    <div className=\"card-line\">\n                        <div className=\"title\">Github Link</div>\n                        <div className=\"detail\">{data.html_url}</div>\n                    </div>\n                    <div className=\"card-line\">\n                        <div className=\"title\">Created On</div>\n                        <div className=\"detail\">{data.created_at}</div>\n                    </div>\n                    <div className=\"card-line\">\n                        <div className=\"title\">Last Update</div>\n                        <div className=\"detail\">{data.updated_at}</div>\n                    </div>\n\n                    <Stats data={stats} />\n                </div>\n\n            </div>\n        </section>\n    );\n}\n\nexport default RepoDetail;","import React, { useEffect } from 'react'\nimport Stats from './../components/Stats';\nimport  { Link } from 'react-router-dom'\nimport styled from 'styled-components'\n\n\nconst NoData = ()=><h3>Search an user</h3>\nconst UserResult = ({ data }) => {\n    const [stats, setStats] = React.useState({});\n    useEffect(() => {\n        setStats({\n            \"followers\": data.followers,\n            \"following\": data.following,\n            \"public gist\": data.public_gist,\n            \"public repos\": data.public_repos\n        });\n    }, [data]);\n\n    if(Object.keys(data).length === 0)\n        return <NoData />;\n    return (\n        <section id=\"user-result\">\n            <div className=\"profile-pic\">\n                <img src={data.avatar_url} />\n            </div>\n\n            <div className=\"details\">\n                <div className=\"card-line\">\n                    <div className=\"title\">Name</div>\n                    <div className=\"detail\">{data.name}</div>\n                </div>\n                <div className=\"card-line\">\n                    <div className=\"title\">Company</div>\n                    <div className=\"detail\">{data.company}</div>\n                </div>\n                <div className=\"card-line\">\n                    <div className=\"title\">Bio</div>\n                    <div className=\"detail\">{data.bio}</div>\n                </div>\n\n                <div className=\"card-line\">\n                    <div className=\"title\">Repositories</div>\n                    <div className=\"detail\">\n                        <Link to={`/${data.login}/repos`}>Click here</Link>\n                    </div>\n                </div>\n\n                <div className=\"card-line\">\n                    <div className=\"title\">Blog</div>\n                    <div className=\"detail\">\n                        <a href={data.blog}>click here to go to blog</a>\n                    </div>\n                </div>\n\n                <Stats data={stats} />\n            </div>\n        </section>\n    );\n}\n\nexport default UserResult;","import React from 'react'\nimport SearchForm from '../components/SearchForm'\nimport UserList from '../components/UserResult'\nimport {getUser} from './../common/urlCall'\nimport {useDispatch} from 'react-redux'\n\nconst UserSearch = () => {\n    const [userData, setUserData] = React.useState({});\n    const dispatch = useDispatch();\n    const onChangeHandler = (val)=>{\n        //make an API call\n        getUser(val).then((data)=>{\n            if(Object.keys(data).length > 0){\n                dispatch({type: 'set-userid', id: data.login});\n                setUserData(data);\n            }\n        });\n    }\n\n    return (\n        <section id=\"user-search-page\">\n            <div className=\"main-heading\">Search</div>\n            <SearchForm onChange={onChangeHandler} placeholder={\"Search by github account\"} />\n            <UserList data={userData} />\n        </section>\n    );\n}\nexport default UserSearch;","function Reducer(state = [], action) {\n    switch (action.type) {\n        case 'set-userid': {\n            return {\n                ...state,\n                userId: action.id\n            }\n        }\n        default:\n            return state\n    }\n}\n\nexport default Reducer;","import React, { Suspense, lazy } from \"react\"\nimport styled from 'styled-components'\nimport './App.scss';\nimport {\n  BrowserRouter as Router,\n  Route,\n  Switch,\n} from 'react-router-dom';\nimport {Provider} from 'react-redux'\nimport {createStore} from 'redux'\nimport Header from './components/Header'\nimport Repos from './views/Repos'\nimport RepoDetail from './views/RepoDetail'\nimport UserSearch from './views/UserSearch'\nimport reducer from './redux/reducer'\n\nconst Fallback = ()=>(<h4>Loading...</h4>)\n\nconst RouterSt = styled.div`\n  margin:15px;\n  justify-content: center;\n  display: flex;\n`;\n\nconst reduxData = createStore(reducer);\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header title={\"Awesome Github\"} />\n      <Suspense fallback={<Fallback />}>\n        <Provider store={reduxData}>\n          <RouterSt>\n            <Router basename={window.location.pathname || ''}>\n                <Switch>\n                    <Route exact path=\"/\" render={props=><UserSearch {...props} />} />\n                    <Route exact path=\"/:user/repos\" render={props=><Repos {...props} />} />\n                    <Route exact path=\"/:user/repos/:repo\" render={props=><RepoDetail {...props} />} />\n                </Switch>\n              </Router>\n            </RouterSt>\n        </Provider>\n      </Suspense>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}