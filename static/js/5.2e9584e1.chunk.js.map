{"version":3,"sources":["common/config.js","common/urlCall.js","components/Stats.jsx","components/SingleDetailList.jsx","views/RepoDetail.jsx"],"names":["BASE_URL","getUser","user","url","Promise","res","rej","get","then","resp","data","e","getRepos","getRepoDetail","repoId","resolve","reject","Axios","console","error","Stats","Object","keys","length","className","map","key","SingleDetailList","name","fullName","RepoDetail","props","repoName","match","params","repo","React","useState","setData","stats","setStats","useEffect","stargazers_count","watchers_count","forks","open_issues_count","id","full_name","description","html_url","created_at","updated_at"],"mappings":"kOAAaA,EAAY,0BCMnBC,EAAU,SAACC,GACb,IAAIC,EAAG,UAAMH,EAAN,iBAAuBE,GAC9B,OAAO,IAAIE,SAAQ,SAACC,EAAKC,GACrBC,EAAIJ,GAAKK,MAAK,SAACC,GACX,IAAIC,EAAOD,EAAKC,KAChBL,EAAIK,MAEL,SAACC,GACAL,EAAIK,UAKVC,EAAW,SAACV,GACd,IAAIC,EAAG,UAAMH,EAAN,iBAAuBE,EAAvB,UACP,OAAO,IAAIE,SAAQ,SAACC,EAAKC,GACrBC,EAAIJ,GAAKK,MAAK,SAACC,GACX,IAAIC,EAAOD,EAAKC,KAChBL,EAAIK,MACL,SAACC,GACAL,EAAIK,UAKVE,EAAgB,SAACX,EAAMY,GACzB,IAAIX,EAAG,UAAMH,EAAN,iBAAuBE,EAAvB,YAA+BY,GACtC,OAAO,IAAIV,SAAQ,SAACC,EAAKC,GACrBC,EAAIJ,GAAKK,MAAK,SAACC,GACX,IAAIC,EAAOD,EAAKC,KAChBL,EAAIK,MACL,SAACC,GACAL,EAAIK,UAMhB,SAASJ,EAAIJ,GACT,GAAKA,EAKL,OAAO,IAAIC,SAAQ,SAACW,EAASC,GACzBC,IAAMV,IAAIJ,GAAKK,MAAK,SAACE,GACjBK,EAAQL,MACT,SAACC,GACAK,EAAOL,SARXO,QAAQC,MAAM,kD,gCC9CtB,oBAoBeC,IAlBD,SAAC,GAAY,IAAXV,EAAU,EAAVA,KACZ,OAA+B,GAA5BW,OAAOC,KAAKZ,GAAMa,OACV,KAGP,yBAAKC,UAAU,SACX,yBAAKA,UAAU,aACVH,OAAOC,KAAKZ,GAAMe,KAAI,SAACC,GAAD,OACnB,yBAAKF,UAAU,OACX,yBAAKA,UAAU,SAASd,EAAKgB,IAAQ,GACrC,+BAAQA,W,gCCZhC,oBASeC,IAPU,SAAC,GAAsB,IAArBC,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,SAC7B,OAAQ,yBAAKL,UAAU,aACnB,yBAAKA,UAAU,SAASI,GACxB,yBAAKJ,UAAU,UAAUK,M,2FCqClBC,UArCI,SAACC,GAChB,IAAMC,EAAWD,EAAME,MAAMC,OAAOC,KAC9BjC,EAAO6B,EAAME,MAAMC,OAAOhC,KAFN,EAIFkC,IAAMC,SAAS,IAJb,mBAInB3B,EAJmB,KAIb4B,EAJa,OAKAF,IAAMC,SAAS,IALf,mBAKnBE,EALmB,KAKZC,EALY,KAiB1B,OAXAC,qBAAU,WACN5B,YAAcX,EAAM8B,GAAUxB,MAAK,SAACE,GAChC4B,EAAQ5B,GACR8B,EAAS,CACL,MAAS9B,EAAKgC,iBACd,MAAShC,EAAKiC,eACd,MAASjC,EAAKkC,MACd,cAAelC,EAAKmC,yBAG9B,IAEE,6BAASC,GAAG,eACR,yBAAKtB,UAAU,gBAAgBd,EAAKkB,MACpC,yBAAKJ,UAAU,aACX,8BACA,yBAAKA,UAAU,WACX,kBAAC,IAAD,CAAkBI,KAAM,OAAQC,SAAUnB,EAAKqC,YAC/C,kBAAC,IAAD,CAAkBnB,KAAM,cAAeC,SAAUnB,EAAKsC,cACtD,kBAAC,IAAD,CAAkBpB,KAAM,cAAeC,SAAUnB,EAAKuC,WACtD,kBAAC,IAAD,CAAkBrB,KAAM,aAAcC,SAAUnB,EAAKwC,aACrD,kBAAC,IAAD,CAAkBtB,KAAM,cAAeC,SAAUnB,EAAKyC,aAEtD,kBAAC,IAAD,CAAOzC,KAAM6B","file":"static/js/5.2e9584e1.chunk.js","sourcesContent":["export const BASE_URL =  \"https://api.github.com/\"","import Axios from 'axios';\nimport {\n    BASE_URL\n} from './config'\n\n\nconst getUser = (user) => {\n    let url = `${BASE_URL}users/${user}`;\n    return new Promise((res, rej) => {\n        get(url).then((resp) => {\n            let data = resp.data;\n            res(data);\n\n        }, (e) => {\n            rej(e);\n        });\n    });\n}\n\nconst getRepos = (user) => {\n    let url = `${BASE_URL}users/${user}/repos`;\n    return new Promise((res, rej) => {\n        get(url).then((resp) => {\n            let data = resp.data;\n            res(data);\n        }, (e) => {\n            rej(e);\n        });\n    });\n}\n\nconst getRepoDetail = (user, repoId) => {\n    let url = `${BASE_URL}repos/${user}/${repoId}`;\n    return new Promise((res, rej) => {\n        get(url).then((resp) => {\n            let data = resp.data;\n            res(data);\n        }, (e) => {\n            rej(e);\n        });\n    });\n}\n\n///////////////////////////////////\nfunction get(url) {\n    if (!url) {\n        console.error(\"URL is a mandatory field to make an API call\");\n        return;\n    }\n\n    return new Promise((resolve, reject) => {\n        Axios.get(url).then((data) => {\n            resolve(data);\n        }, (e) => {\n            reject(e);\n        });\n    });\n}\n\n\nexport {\n    getUser,\n    getRepoDetail,\n    getRepos\n}","import React from 'react'\n\nconst Stats = ({data}) => {\n    if(Object.keys(data).length == 0)\n        return null;\n\n    return (\n        <div className=\"stats\">\n            <div className=\"stats-row\">\n                {Object.keys(data).map((key) => (\n                    <div className=\"row\">\n                        <div className=\"stats\">{data[key] || 0}</div>\n                        <small>{key}</small>\n                    </div>\n                ))}\n            </div>\n        </div>\n    );\n}\n\nexport default Stats;","import React from 'react'\n\nconst SingleDetailList = ({name, fullName}) => {\n    return (<div className=\"card-line\">\n        <div className=\"title\">{name}</div>\n        <div className=\"detail\">{fullName}</div>\n    </div>);\n}\n\nexport default SingleDetailList;","import React, { useEffect } from 'react'\nimport {getRepoDetail} from './../common/urlCall';\nimport Stats from './../components/Stats';\nimport SingleDetailList from './../components/SingleDetailList'\n\nconst RepoDetail = (props) => {\n    const repoName = props.match.params.repo;\n    const user = props.match.params.user;\n\n    const [data, setData] = React.useState({});\n    const [stats, setStats] = React.useState([]);\n    useEffect(()=>{\n        getRepoDetail(user, repoName).then((data)=>{\n            setData(data);\n            setStats({\n                \"Stars\": data.stargazers_count,\n                \"Watch\": data.watchers_count,\n                \"Forks\": data.forks,\n                \"Open Issues\": data.open_issues_count\n            });\n        })\n    },[]);\n    return (\n        <section id=\"repo-detail\">\n            <div className=\"main-heading\">{data.name}</div>\n            <div className=\"main-repo\">\n                <div></div>\n                <div className=\"details\">\n                    <SingleDetailList name={\"Name\"} fullName={data.full_name} />\n                    <SingleDetailList name={\"Description\"} fullName={data.description} />\n                    <SingleDetailList name={\"Github Link\"} fullName={data.html_url} />\n                    <SingleDetailList name={\"Created On\"} fullName={data.created_at} />\n                    <SingleDetailList name={\"Last Update\"} fullName={data.updated_at} />\n\n                    <Stats data={stats} />\n                </div>\n\n            </div>\n        </section>\n    );\n}\n\nexport default RepoDetail;"],"sourceRoot":""}