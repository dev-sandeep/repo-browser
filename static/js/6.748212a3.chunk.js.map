{"version":3,"sources":["common/config.js","common/urlCall.js","components/SearchForm.jsx","common/utility.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","views/Repos.jsx"],"names":["BASE_URL","getUser","user","url","Promise","res","rej","get","then","resp","data","e","getRepos","getRepoDetail","repoId","resolve","reject","Axios","console","error","SearchForm","placeholder","onChange","searchAction","func","wait","immediate","timeout","context","this","args","arguments","later","apply","callNow","clearTimeout","setTimeout","debounce","val","id","onSubmit","preventDefault","className","target","value","type","_toConsumableArray","arr","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","Object","from","unsupportedIterableToArray","TypeError","StripedSt","styled","tr","props","num","Repos","reduxData","useSelector","state","useState","originalData","setOriginalData","isStarSorted","setIsStarSorted","repoData","setRepoData","searchText","setSearchText","selectedUser","match","params","userId","useEffect","sort","a","b","stargazers_count","text","finalData","filter","el","name","toLowerCase","indexOf","description","language","disabled","length","checked","map","index","to"],"mappings":"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","file":"static/js/6.748212a3.chunk.js","sourcesContent":["export const BASE_URL =  \"https://api.github.com/\"","import Axios from 'axios';\nimport {\n    BASE_URL\n} from './config'\n\n\nconst getUser = (user) => {\n    let url = `${BASE_URL}users/${user}`;\n    return new Promise((res, rej) => {\n        get(url).then((resp) => {\n            let data = resp.data;\n            res(data);\n\n        }, (e) => {\n            rej(e);\n        });\n    });\n}\n\nconst getRepos = (user) => {\n    let url = `${BASE_URL}users/${user}/repos`;\n    return new Promise((res, rej) => {\n        get(url).then((resp) => {\n            let data = resp.data;\n            res(data);\n        }, (e) => {\n            rej(e);\n        });\n    });\n}\n\nconst getRepoDetail = (user, repoId) => {\n    let url = `${BASE_URL}repos/${user}/${repoId}`;\n    return new Promise((res, rej) => {\n        get(url).then((resp) => {\n            let data = resp.data;\n            res(data);\n        }, (e) => {\n            rej(e);\n        });\n    });\n}\n\n///////////////////////////////////\nfunction get(url) {\n    if (!url) {\n        console.error(\"URL is a mandatory field to make an API call\");\n        return;\n    }\n\n    return new Promise((resolve, reject) => {\n        Axios.get(url).then((data) => {\n            resolve(data);\n        }, (e) => {\n            reject(e);\n        });\n    });\n}\n\n\nexport {\n    getUser,\n    getRepoDetail,\n    getRepos\n}","import React from 'react'\nimport {debounce} from './../common/utility'\n\nconst SearchForm = ({placeholder, onChange}) => {\n    const searchAction = debounce((val)=>{\n        onChange(val);\n    }, 350);\n\n    const onnChangeHandler = (e)=>{\n        searchAction(e.target.value);\n    }\n\n    return (\n        <form id=\"user-serch-form\" onSubmit={e=>e.preventDefault()}>\n            <div className=\"input-div\">\n                <input onChange={onnChangeHandler} type=\"text\" placeholder={placeholder} />\n            </div>\n        </form>\n    );\n}\n\nexport default SearchForm;","/**\n * debounce function\n * @param {} func \n * @param {*} wait \n * @param {*} immediate \n */\nexport const debounce = (func, wait, immediate) => {\n    var timeout;\n    return function () {\n        var context = this,\n            args = arguments;\n        var later = function () {\n            timeout = null;\n            if (!immediate) func.apply(context, args);\n        };\n        var callNow = immediate && !timeout;\n        clearTimeout(timeout);\n        timeout = setTimeout(later, wait);\n        if (callNow) func.apply(context, args);\n    };\n};","import arrayWithoutHoles from \"./arrayWithoutHoles\";\nimport iterableToArray from \"./iterableToArray\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableSpread from \"./nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import React, { useEffect, useState } from 'react'\nimport SearchForm from '../components/SearchForm';\nimport {useSelector} from 'react-redux'\nimport {getRepos} from './../common/urlCall';\nimport styled from 'styled-components'\nimport  { Link } from 'react-router-dom'\n\nconst StripedSt = styled.tr`\n    background: ${props=>props.num % 2 == 0?'#f1f8ff':'#fff'}\n`;\nconst Repos = (props) => {\n    const reduxData = useSelector(state=>state);\n    const [originalData, setOriginalData] = useState([]);\n    const [isStarSorted, setIsStarSorted] = useState(false);\n    const [repoData, setRepoData] = useState([]);\n    const [searchText, setSearchText] = useState('');\n\n    const selectedUser = props.match.params.user || reduxData.userId;\n    /**\n     * onloading first time make an API call and fetch the data\n     */\n    useEffect(()=>{\n        getRepos(selectedUser).then((data)=>{\n            setRepoData(data);\n            setOriginalData(data);\n        })\n    },[]);\n\n    /**\n     * responsible for handling the text search\n     * @param {} searchText \n     */\n    const onChangeHandler = (text)=>{\n        setSearchText(text);\n        let finalData = originalData.filter((el)=>{\n            if(el.name.toLowerCase().indexOf(text.toLowerCase()) !== -1)\n                return true\n            if(el.description && el.description.toLowerCase().indexOf(text.toLowerCase()) !== -1)\n                return true\n            if(el.language && el.language.toLowerCase().indexOf(text.toLowerCase()) !== -1)\n                return true\n\n            return false;\n        });\n\n        //sort if needed\n        if(isStarSorted){\n            finalData = sort(finalData);\n        }\n        \n        setRepoData(finalData);\n    }\n\n    /**\n     * responsible for sorting the elements by star\n     * @param {} data \n     */\n    const sort = data=>[...data].sort((a, b)=>b.stargazers_count - a.stargazers_count);\n\n    /**\n     * responsbile for sorting based on number of stars\n     */\n    const sortByStarHandler = (e)=>{\n        const isChecked = e.target.checked;\n        if(isChecked){\n            setIsStarSorted(true);\n            //sort by stars\n            let finalData = sort(repoData);\n            setRepoData(finalData);\n        }else{\n            setIsStarSorted(false);\n            setRepoData(originalData);\n        }\n    }\n\n    return (\n        <section id=\"main-repo\">\n            <div className=\"main-heading\">Repositories</div>\n            <SearchForm onChange={onChangeHandler} placeholder={\"Search a repository\"} />\n            <div>\n                <br />\n                <input disabled={searchText.length > 0} type=\"checkbox\" checked={isStarSorted} onChange={sortByStarHandler} />\n                <small>Sort by stars</small>\n            </div>\n            <table id=\"table-repo\">\n                <thead>\n                <tr>\n                    <th>Name</th>\n                    <th>Description</th>\n                    <th>Language</th>\n                    <th>Stars</th>\n                </tr>\n                </thead>\n                <tbody>\n                {repoData.map((el, index)=>(\n                    <StripedSt num={index}>\n                      <td>\n                          <Link to={`/${selectedUser}/repos/${el.name}`}>{el.name}</Link></td>\n                      <td>{el.description}</td>\n                      <td className=\"language\">{el.language}</td>\n                      <td className=\"stars\">{el.stargazers_count}</td>\n                  </StripedSt>\n                ))}\n                </tbody>\n            </table>\n        </section>\n    );\n}\n\nexport default Repos;"],"sourceRoot":""}